Ben Brownstein Rocketship
Scourcecode:
public class DrawRocket {
		public static final int SIZE = 3;
		public static void main(String[] args) 
		{
			rocketCone();
			partOne();
			partTwo();
			rocketCone();
		}
		public static void rocketCone() 
		{
			for (int i = 1; i <= (SIZE *2)-1; i++) 
			{
				for (int j = 1; j <= (SIZE *2)-i; j++)
				{
					System.out.print(" ");
				}
				for (int k = 1; k <= i; k++) 
				{
					System.out.print("/");
				}
			System.out.print("**");
			for (int l = 1; l <= i; l++)
			{
				System.out.print("\\");
			}
			System.out.println();
			}
		}
		public static void topCenter() 
		{
			for (int i = 1; i <= SIZE; i++)
			{	
					System.out.print("|");
					for (int k = 1; k <= SIZE - i; k++) 
					{
						System.out.print(".");
					}
					for (int j = 1; j <= i; j++) 
					{
						System.out.print("/\\");
					}
					for (int k = 1; k <= SIZE - i; k++) 
					{
						System.out.print(".");
					}
					for (int k = 1; k <= SIZE - i; k++) 
					{
						System.out.print(".");
					}
					for (int j = 1; j <= i; j++) 
					{
						System.out.print("/\\");
					}
					for (int k = 1; k <= SIZE - i; k++) 
					{
						System.out.print(".");
					}
					System.out.println("|");
			}
		}
		public static void bottomCenter() 
		{
			for (int i = 1; i <= SIZE; i++) 
			{
				System.out.print("|");
				for (int k = 1; k <= i - 1; k++) 
				{
					System.out.print(".");
				}
				for (int j = SIZE; j >= i; j--) 
				{
					System.out.print("\\/");
				}
				for (int k = 1; k <= i - 1; k++) 
				{
					System.out.print(".");
				}
				for (int k = 1; k <= i - 1; k++) 
				{
					System.out.print(".");
				}
				for (int j = SIZE; j >= i; j--) 
				{
					System.out.print("\\/");
				}
				for (int k = 1; k <= i - 1; k++) 
				{
					System.out.print(".");
				}
				System.out.println("|");
			}
		}
		public static void divider() 
		{
			System.out.print("+");
			for (int i = 1; i <= SIZE * 2; i++) 
			{
				System.out.print("=*");
			}
			System.out.println("+");
		}
		public static void partOne() 
		{
			divider();
			topCenter();
			bottomCenter();
			divider();
		}
		public static void partTwo() 
		{
			bottomCenter();
			topCenter();
			divider();
		}
}

Output (Size = 3):
     /**\
    //**\\
   ///**\\\
  ////**\\\\
 /////**\\\\\
+=*=*=*=*=*=*+
|../\..../\..|
|./\/\../\/\.|
|/\/\/\/\/\/\|
|\/\/\/\/\/\/|
|.\/\/..\/\/.|
|..\/....\/..|
+=*=*=*=*=*=*+
|\/\/\/\/\/\/|
|.\/\/..\/\/.|
|..\/....\/..|
|../\..../\..|
|./\/\../\/\.|
|/\/\/\/\/\/\|
+=*=*=*=*=*=*+
     /**\
    //**\\
   ///**\\\
  ////**\\\\
 /////**\\\\\

Output (Size = 5):
         /**\
        //**\\
       ///**\\\
      ////**\\\\
     /////**\\\\\
    //////**\\\\\\
   ///////**\\\\\\\
  ////////**\\\\\\\\
 /////////**\\\\\\\\\
+=*=*=*=*=*=*=*=*=*=*+
|..../\......../\....|
|.../\/\....../\/\...|
|../\/\/\..../\/\/\..|
|./\/\/\/\../\/\/\/\.|
|/\/\/\/\/\/\/\/\/\/\|
|\/\/\/\/\/\/\/\/\/\/|
|.\/\/\/\/..\/\/\/\/.|
|..\/\/\/....\/\/\/..|
|...\/\/......\/\/...|
|....\/........\/....|
+=*=*=*=*=*=*=*=*=*=*+
|\/\/\/\/\/\/\/\/\/\/|
|.\/\/\/\/..\/\/\/\/.|
|..\/\/\/....\/\/\/..|
|...\/\/......\/\/...|
|....\/........\/....|
|..../\......../\....|
|.../\/\....../\/\...|
|../\/\/\..../\/\/\..|
|./\/\/\/\../\/\/\/\.|
|/\/\/\/\/\/\/\/\/\/\|
+=*=*=*=*=*=*=*=*=*=*+
         /**\
        //**\\
       ///**\\\
      ////**\\\\
     /////**\\\\\
    //////**\\\\\\
   ///////**\\\\\\\
  ////////**\\\\\\\\
 /////////**\\\\\\\\\
